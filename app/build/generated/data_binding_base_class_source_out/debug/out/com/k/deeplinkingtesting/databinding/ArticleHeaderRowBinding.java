// Generated by view binder compiler. Do not edit!
package com.k.deeplinkingtesting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.k.deeplinkingtesting.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ArticleHeaderRowBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout articleHeaderTextLayout;

  @NonNull
  public final TextView articleHeadlineTv;

  @NonNull
  public final ImageView articleImage;

  @NonNull
  public final TextView box1BigTv;

  @NonNull
  public final TextView box1SmallTv;

  @NonNull
  public final TextView box2BigTv;

  @NonNull
  public final TextView box2SmallTv;

  @NonNull
  public final TextView box3BigTv;

  @NonNull
  public final TextView box3SmallTv;

  @NonNull
  public final LinearLayout boxesWrapperLl;

  @NonNull
  public final TextView dateBigTv;

  @NonNull
  public final TextView dateSmallTv;

  private ArticleHeaderRowBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout articleHeaderTextLayout, @NonNull TextView articleHeadlineTv,
      @NonNull ImageView articleImage, @NonNull TextView box1BigTv, @NonNull TextView box1SmallTv,
      @NonNull TextView box2BigTv, @NonNull TextView box2SmallTv, @NonNull TextView box3BigTv,
      @NonNull TextView box3SmallTv, @NonNull LinearLayout boxesWrapperLl,
      @NonNull TextView dateBigTv, @NonNull TextView dateSmallTv) {
    this.rootView = rootView;
    this.articleHeaderTextLayout = articleHeaderTextLayout;
    this.articleHeadlineTv = articleHeadlineTv;
    this.articleImage = articleImage;
    this.box1BigTv = box1BigTv;
    this.box1SmallTv = box1SmallTv;
    this.box2BigTv = box2BigTv;
    this.box2SmallTv = box2SmallTv;
    this.box3BigTv = box3BigTv;
    this.box3SmallTv = box3SmallTv;
    this.boxesWrapperLl = boxesWrapperLl;
    this.dateBigTv = dateBigTv;
    this.dateSmallTv = dateSmallTv;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ArticleHeaderRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ArticleHeaderRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.article_header_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ArticleHeaderRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.article_header_text_layout;
      RelativeLayout articleHeaderTextLayout = ViewBindings.findChildViewById(rootView, id);
      if (articleHeaderTextLayout == null) {
        break missingId;
      }

      id = R.id.article_headline_tv;
      TextView articleHeadlineTv = ViewBindings.findChildViewById(rootView, id);
      if (articleHeadlineTv == null) {
        break missingId;
      }

      id = R.id.article_image;
      ImageView articleImage = ViewBindings.findChildViewById(rootView, id);
      if (articleImage == null) {
        break missingId;
      }

      id = R.id.box1_big_tv;
      TextView box1BigTv = ViewBindings.findChildViewById(rootView, id);
      if (box1BigTv == null) {
        break missingId;
      }

      id = R.id.box1_small_tv;
      TextView box1SmallTv = ViewBindings.findChildViewById(rootView, id);
      if (box1SmallTv == null) {
        break missingId;
      }

      id = R.id.box2_big_tv;
      TextView box2BigTv = ViewBindings.findChildViewById(rootView, id);
      if (box2BigTv == null) {
        break missingId;
      }

      id = R.id.box2_small_tv;
      TextView box2SmallTv = ViewBindings.findChildViewById(rootView, id);
      if (box2SmallTv == null) {
        break missingId;
      }

      id = R.id.box3_big_tv;
      TextView box3BigTv = ViewBindings.findChildViewById(rootView, id);
      if (box3BigTv == null) {
        break missingId;
      }

      id = R.id.box3_small_tv;
      TextView box3SmallTv = ViewBindings.findChildViewById(rootView, id);
      if (box3SmallTv == null) {
        break missingId;
      }

      id = R.id.boxes_wrapper_ll;
      LinearLayout boxesWrapperLl = ViewBindings.findChildViewById(rootView, id);
      if (boxesWrapperLl == null) {
        break missingId;
      }

      id = R.id.date_big_tv;
      TextView dateBigTv = ViewBindings.findChildViewById(rootView, id);
      if (dateBigTv == null) {
        break missingId;
      }

      id = R.id.date_small_tv;
      TextView dateSmallTv = ViewBindings.findChildViewById(rootView, id);
      if (dateSmallTv == null) {
        break missingId;
      }

      return new ArticleHeaderRowBinding((RelativeLayout) rootView, articleHeaderTextLayout,
          articleHeadlineTv, articleImage, box1BigTv, box1SmallTv, box2BigTv, box2SmallTv,
          box3BigTv, box3SmallTv, boxesWrapperLl, dateBigTv, dateSmallTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
