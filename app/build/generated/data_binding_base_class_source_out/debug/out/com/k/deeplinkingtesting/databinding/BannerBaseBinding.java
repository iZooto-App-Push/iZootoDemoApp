// Generated by view binder compiler. Do not edit!
package com.k.deeplinkingtesting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.k.deeplinkingtesting.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BannerBaseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button bannerIn;

  @NonNull
  public final Button buttonAd;

  @NonNull
  public final Button buttonLoadAd;

  @NonNull
  public final Button buttonNativeAd;

  @NonNull
  public final Button buttonShowAd;

  @NonNull
  public final Button interstitialIn;

  @NonNull
  public final Button rewardedIn;

  @NonNull
  public final Button xmlSample;

  private BannerBaseBinding(@NonNull LinearLayout rootView, @NonNull Button bannerIn,
      @NonNull Button buttonAd, @NonNull Button buttonLoadAd, @NonNull Button buttonNativeAd,
      @NonNull Button buttonShowAd, @NonNull Button interstitialIn, @NonNull Button rewardedIn,
      @NonNull Button xmlSample) {
    this.rootView = rootView;
    this.bannerIn = bannerIn;
    this.buttonAd = buttonAd;
    this.buttonLoadAd = buttonLoadAd;
    this.buttonNativeAd = buttonNativeAd;
    this.buttonShowAd = buttonShowAd;
    this.interstitialIn = interstitialIn;
    this.rewardedIn = rewardedIn;
    this.xmlSample = xmlSample;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BannerBaseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BannerBaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.banner_base, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BannerBaseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bannerIn;
      Button bannerIn = ViewBindings.findChildViewById(rootView, id);
      if (bannerIn == null) {
        break missingId;
      }

      id = R.id.button_ad;
      Button buttonAd = ViewBindings.findChildViewById(rootView, id);
      if (buttonAd == null) {
        break missingId;
      }

      id = R.id.button_load_ad;
      Button buttonLoadAd = ViewBindings.findChildViewById(rootView, id);
      if (buttonLoadAd == null) {
        break missingId;
      }

      id = R.id.button_native_ad;
      Button buttonNativeAd = ViewBindings.findChildViewById(rootView, id);
      if (buttonNativeAd == null) {
        break missingId;
      }

      id = R.id.button_show_ad;
      Button buttonShowAd = ViewBindings.findChildViewById(rootView, id);
      if (buttonShowAd == null) {
        break missingId;
      }

      id = R.id.interstitialIn;
      Button interstitialIn = ViewBindings.findChildViewById(rootView, id);
      if (interstitialIn == null) {
        break missingId;
      }

      id = R.id.rewardedIn;
      Button rewardedIn = ViewBindings.findChildViewById(rootView, id);
      if (rewardedIn == null) {
        break missingId;
      }

      id = R.id.xmlSample;
      Button xmlSample = ViewBindings.findChildViewById(rootView, id);
      if (xmlSample == null) {
        break missingId;
      }

      return new BannerBaseBinding((LinearLayout) rootView, bannerIn, buttonAd, buttonLoadAd,
          buttonNativeAd, buttonShowAd, interstitialIn, rewardedIn, xmlSample);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
