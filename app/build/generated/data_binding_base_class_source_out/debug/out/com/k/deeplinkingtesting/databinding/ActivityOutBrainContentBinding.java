// Generated by view binder compiler. Do not edit!
package com.k.deeplinkingtesting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.k.deeplinkingtesting.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOutBrainContentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button grid;

  @NonNull
  public final Button sfVideo;

  @NonNull
  public final Button sfWebFeed;

  @NonNull
  public final Button sfWebScroll;

  @NonNull
  public final Button slidingDrawer;

  @NonNull
  public final Button smartFeed;

  @NonNull
  public final Button smartMiddleFeed;

  private ActivityOutBrainContentBinding(@NonNull LinearLayout rootView, @NonNull Button grid,
      @NonNull Button sfVideo, @NonNull Button sfWebFeed, @NonNull Button sfWebScroll,
      @NonNull Button slidingDrawer, @NonNull Button smartFeed, @NonNull Button smartMiddleFeed) {
    this.rootView = rootView;
    this.grid = grid;
    this.sfVideo = sfVideo;
    this.sfWebFeed = sfWebFeed;
    this.sfWebScroll = sfWebScroll;
    this.slidingDrawer = slidingDrawer;
    this.smartFeed = smartFeed;
    this.smartMiddleFeed = smartMiddleFeed;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOutBrainContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOutBrainContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_out_brain_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOutBrainContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.grid;
      Button grid = ViewBindings.findChildViewById(rootView, id);
      if (grid == null) {
        break missingId;
      }

      id = R.id.sf_video;
      Button sfVideo = ViewBindings.findChildViewById(rootView, id);
      if (sfVideo == null) {
        break missingId;
      }

      id = R.id.sf_web_feed;
      Button sfWebFeed = ViewBindings.findChildViewById(rootView, id);
      if (sfWebFeed == null) {
        break missingId;
      }

      id = R.id.sf_web_scroll;
      Button sfWebScroll = ViewBindings.findChildViewById(rootView, id);
      if (sfWebScroll == null) {
        break missingId;
      }

      id = R.id.sliding_drawer;
      Button slidingDrawer = ViewBindings.findChildViewById(rootView, id);
      if (slidingDrawer == null) {
        break missingId;
      }

      id = R.id.smart_feed;
      Button smartFeed = ViewBindings.findChildViewById(rootView, id);
      if (smartFeed == null) {
        break missingId;
      }

      id = R.id.smart_middle_feed;
      Button smartMiddleFeed = ViewBindings.findChildViewById(rootView, id);
      if (smartMiddleFeed == null) {
        break missingId;
      }

      return new ActivityOutBrainContentBinding((LinearLayout) rootView, grid, sfVideo, sfWebFeed,
          sfWebScroll, slidingDrawer, smartFeed, smartMiddleFeed);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
