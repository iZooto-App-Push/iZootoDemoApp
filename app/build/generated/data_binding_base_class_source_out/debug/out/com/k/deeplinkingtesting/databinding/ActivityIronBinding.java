// Generated by view binder compiler. Do not edit!
package com.k.deeplinkingtesting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.k.deeplinkingtesting.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityIronBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout adContainer;

  @NonNull
  public final FrameLayout bannerFooter;

  @NonNull
  public final LinearLayout bannerLayout;

  @NonNull
  public final Button bannerLoadButton;

  @NonNull
  public final LinearLayout bannerViewLayout;

  @NonNull
  public final LinearLayout imageLayout;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout interstitialLayout;

  @NonNull
  public final Button interstitialLoadButton;

  @NonNull
  public final Button interstitialShowButton;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final LinearLayout nativeLayout;

  @NonNull
  public final Button nativeLoadButton;

  @NonNull
  public final LinearLayout rewardedLayout;

  @NonNull
  public final Button rewardedLoadButton;

  @NonNull
  public final Button rewardedShowButton;

  @NonNull
  public final LinearLayout rewardedVideoLayout;

  @NonNull
  public final Button rvButton;

  @NonNull
  public final LinearLayout sdkLayout;

  @NonNull
  public final TextView versionTxt;

  private ActivityIronBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout adContainer,
      @NonNull FrameLayout bannerFooter, @NonNull LinearLayout bannerLayout,
      @NonNull Button bannerLoadButton, @NonNull LinearLayout bannerViewLayout,
      @NonNull LinearLayout imageLayout, @NonNull ImageView imageView,
      @NonNull LinearLayout interstitialLayout, @NonNull Button interstitialLoadButton,
      @NonNull Button interstitialShowButton, @NonNull RelativeLayout main,
      @NonNull LinearLayout nativeLayout, @NonNull Button nativeLoadButton,
      @NonNull LinearLayout rewardedLayout, @NonNull Button rewardedLoadButton,
      @NonNull Button rewardedShowButton, @NonNull LinearLayout rewardedVideoLayout,
      @NonNull Button rvButton, @NonNull LinearLayout sdkLayout, @NonNull TextView versionTxt) {
    this.rootView = rootView;
    this.adContainer = adContainer;
    this.bannerFooter = bannerFooter;
    this.bannerLayout = bannerLayout;
    this.bannerLoadButton = bannerLoadButton;
    this.bannerViewLayout = bannerViewLayout;
    this.imageLayout = imageLayout;
    this.imageView = imageView;
    this.interstitialLayout = interstitialLayout;
    this.interstitialLoadButton = interstitialLoadButton;
    this.interstitialShowButton = interstitialShowButton;
    this.main = main;
    this.nativeLayout = nativeLayout;
    this.nativeLoadButton = nativeLoadButton;
    this.rewardedLayout = rewardedLayout;
    this.rewardedLoadButton = rewardedLoadButton;
    this.rewardedShowButton = rewardedShowButton;
    this.rewardedVideoLayout = rewardedVideoLayout;
    this.rvButton = rvButton;
    this.sdkLayout = sdkLayout;
    this.versionTxt = versionTxt;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityIronBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityIronBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_iron, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityIronBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adContainer;
      LinearLayout adContainer = ViewBindings.findChildViewById(rootView, id);
      if (adContainer == null) {
        break missingId;
      }

      id = R.id.banner_footer;
      FrameLayout bannerFooter = ViewBindings.findChildViewById(rootView, id);
      if (bannerFooter == null) {
        break missingId;
      }

      id = R.id.banner_layout;
      LinearLayout bannerLayout = ViewBindings.findChildViewById(rootView, id);
      if (bannerLayout == null) {
        break missingId;
      }

      id = R.id.banner_load_button;
      Button bannerLoadButton = ViewBindings.findChildViewById(rootView, id);
      if (bannerLoadButton == null) {
        break missingId;
      }

      id = R.id.banner_view_layout;
      LinearLayout bannerViewLayout = ViewBindings.findChildViewById(rootView, id);
      if (bannerViewLayout == null) {
        break missingId;
      }

      id = R.id.image_layout;
      LinearLayout imageLayout = ViewBindings.findChildViewById(rootView, id);
      if (imageLayout == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.interstitial_layout;
      LinearLayout interstitialLayout = ViewBindings.findChildViewById(rootView, id);
      if (interstitialLayout == null) {
        break missingId;
      }

      id = R.id.interstitial_load_button;
      Button interstitialLoadButton = ViewBindings.findChildViewById(rootView, id);
      if (interstitialLoadButton == null) {
        break missingId;
      }

      id = R.id.interstitial_show_button;
      Button interstitialShowButton = ViewBindings.findChildViewById(rootView, id);
      if (interstitialShowButton == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.native_layout;
      LinearLayout nativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (nativeLayout == null) {
        break missingId;
      }

      id = R.id.native_load_button;
      Button nativeLoadButton = ViewBindings.findChildViewById(rootView, id);
      if (nativeLoadButton == null) {
        break missingId;
      }

      id = R.id.rewarded_layout;
      LinearLayout rewardedLayout = ViewBindings.findChildViewById(rootView, id);
      if (rewardedLayout == null) {
        break missingId;
      }

      id = R.id.rewarded_load_button;
      Button rewardedLoadButton = ViewBindings.findChildViewById(rootView, id);
      if (rewardedLoadButton == null) {
        break missingId;
      }

      id = R.id.rewarded_show_button;
      Button rewardedShowButton = ViewBindings.findChildViewById(rootView, id);
      if (rewardedShowButton == null) {
        break missingId;
      }

      id = R.id.rewarded_video_layout;
      LinearLayout rewardedVideoLayout = ViewBindings.findChildViewById(rootView, id);
      if (rewardedVideoLayout == null) {
        break missingId;
      }

      id = R.id.rv_button;
      Button rvButton = ViewBindings.findChildViewById(rootView, id);
      if (rvButton == null) {
        break missingId;
      }

      id = R.id.sdk_layout;
      LinearLayout sdkLayout = ViewBindings.findChildViewById(rootView, id);
      if (sdkLayout == null) {
        break missingId;
      }

      id = R.id.version_txt;
      TextView versionTxt = ViewBindings.findChildViewById(rootView, id);
      if (versionTxt == null) {
        break missingId;
      }

      return new ActivityIronBinding((RelativeLayout) rootView, adContainer, bannerFooter,
          bannerLayout, bannerLoadButton, bannerViewLayout, imageLayout, imageView,
          interstitialLayout, interstitialLoadButton, interstitialShowButton, main, nativeLayout,
          nativeLoadButton, rewardedLayout, rewardedLoadButton, rewardedShowButton,
          rewardedVideoLayout, rvButton, sdkLayout, versionTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
