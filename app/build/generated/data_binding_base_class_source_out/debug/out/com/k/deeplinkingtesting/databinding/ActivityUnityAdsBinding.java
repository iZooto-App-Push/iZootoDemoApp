// Generated by view binder compiler. Do not edit!
package com.k.deeplinkingtesting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.k.deeplinkingtesting.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUnityAdsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RelativeLayout bottomBanner;

  @NonNull
  public final Button hideBottomBanner;

  @NonNull
  public final Button hideTopBanner;

  @NonNull
  public final Button interstitialAd;

  @NonNull
  public final Button loadBottomBanner;

  @NonNull
  public final Button loadTopBanner;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Button rewardedAd;

  @NonNull
  public final FrameLayout topBanner;

  private ActivityUnityAdsBinding(@NonNull ConstraintLayout rootView,
      @NonNull RelativeLayout bottomBanner, @NonNull Button hideBottomBanner,
      @NonNull Button hideTopBanner, @NonNull Button interstitialAd,
      @NonNull Button loadBottomBanner, @NonNull Button loadTopBanner,
      @NonNull ConstraintLayout main, @NonNull Button rewardedAd, @NonNull FrameLayout topBanner) {
    this.rootView = rootView;
    this.bottomBanner = bottomBanner;
    this.hideBottomBanner = hideBottomBanner;
    this.hideTopBanner = hideTopBanner;
    this.interstitialAd = interstitialAd;
    this.loadBottomBanner = loadBottomBanner;
    this.loadTopBanner = loadTopBanner;
    this.main = main;
    this.rewardedAd = rewardedAd;
    this.topBanner = topBanner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUnityAdsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUnityAdsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_unity_ads, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUnityAdsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomBanner;
      RelativeLayout bottomBanner = ViewBindings.findChildViewById(rootView, id);
      if (bottomBanner == null) {
        break missingId;
      }

      id = R.id.hideBottomBanner;
      Button hideBottomBanner = ViewBindings.findChildViewById(rootView, id);
      if (hideBottomBanner == null) {
        break missingId;
      }

      id = R.id.hideTopBanner;
      Button hideTopBanner = ViewBindings.findChildViewById(rootView, id);
      if (hideTopBanner == null) {
        break missingId;
      }

      id = R.id.interstitialAd;
      Button interstitialAd = ViewBindings.findChildViewById(rootView, id);
      if (interstitialAd == null) {
        break missingId;
      }

      id = R.id.loadBottomBanner;
      Button loadBottomBanner = ViewBindings.findChildViewById(rootView, id);
      if (loadBottomBanner == null) {
        break missingId;
      }

      id = R.id.loadTopBanner;
      Button loadTopBanner = ViewBindings.findChildViewById(rootView, id);
      if (loadTopBanner == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.rewardedAd;
      Button rewardedAd = ViewBindings.findChildViewById(rootView, id);
      if (rewardedAd == null) {
        break missingId;
      }

      id = R.id.topBanner;
      FrameLayout topBanner = ViewBindings.findChildViewById(rootView, id);
      if (topBanner == null) {
        break missingId;
      }

      return new ActivityUnityAdsBinding((ConstraintLayout) rootView, bottomBanner,
          hideBottomBanner, hideTopBanner, interstitialAd, loadBottomBanner, loadTopBanner, main,
          rewardedAd, topBanner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
