// Generated by view binder compiler. Do not edit!
package com.k.deeplinkingtesting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.k.deeplinkingtesting.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MenuItemContainerBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView menuItemCardView;

  @NonNull
  public final TextView menuItemCategory;

  @NonNull
  public final TextView menuItemDescription;

  @NonNull
  public final ImageView menuItemImage;

  @NonNull
  public final TextView menuItemName;

  @NonNull
  public final TextView menuItemPrice;

  private MenuItemContainerBinding(@NonNull CardView rootView, @NonNull CardView menuItemCardView,
      @NonNull TextView menuItemCategory, @NonNull TextView menuItemDescription,
      @NonNull ImageView menuItemImage, @NonNull TextView menuItemName,
      @NonNull TextView menuItemPrice) {
    this.rootView = rootView;
    this.menuItemCardView = menuItemCardView;
    this.menuItemCategory = menuItemCategory;
    this.menuItemDescription = menuItemDescription;
    this.menuItemImage = menuItemImage;
    this.menuItemName = menuItemName;
    this.menuItemPrice = menuItemPrice;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MenuItemContainerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MenuItemContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.menu_item_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MenuItemContainerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView menuItemCardView = (CardView) rootView;

      id = R.id.menu_item_category;
      TextView menuItemCategory = ViewBindings.findChildViewById(rootView, id);
      if (menuItemCategory == null) {
        break missingId;
      }

      id = R.id.menu_item_description;
      TextView menuItemDescription = ViewBindings.findChildViewById(rootView, id);
      if (menuItemDescription == null) {
        break missingId;
      }

      id = R.id.menu_item_image;
      ImageView menuItemImage = ViewBindings.findChildViewById(rootView, id);
      if (menuItemImage == null) {
        break missingId;
      }

      id = R.id.menu_item_name;
      TextView menuItemName = ViewBindings.findChildViewById(rootView, id);
      if (menuItemName == null) {
        break missingId;
      }

      id = R.id.menu_item_price;
      TextView menuItemPrice = ViewBindings.findChildViewById(rootView, id);
      if (menuItemPrice == null) {
        break missingId;
      }

      return new MenuItemContainerBinding((CardView) rootView, menuItemCardView, menuItemCategory,
          menuItemDescription, menuItemImage, menuItemName, menuItemPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
