// Generated by view binder compiler. Do not edit!
package com.k.deeplinkingtesting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.gms.ads.admanager.AdManagerAdView;
import com.k.deeplinkingtesting.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TestingNativeAdsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout adLayout;

  @NonNull
  public final AdManagerAdView adManagerAdView;

  @NonNull
  public final TextView btnAppVersion;

  @NonNull
  public final Button btnBeginDebugFile;

  @NonNull
  public final Button btnDeleteDebugFile;

  @NonNull
  public final Button btnNewsHub;

  @NonNull
  public final Button btnPermissionFIle;

  @NonNull
  public final Button btnSendDebugFile;

  @NonNull
  public final LinearLayout layoutLinear;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final Button trackEvents;

  private TestingNativeAdsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout adLayout, @NonNull AdManagerAdView adManagerAdView,
      @NonNull TextView btnAppVersion, @NonNull Button btnBeginDebugFile,
      @NonNull Button btnDeleteDebugFile, @NonNull Button btnNewsHub,
      @NonNull Button btnPermissionFIle, @NonNull Button btnSendDebugFile,
      @NonNull LinearLayout layoutLinear, @NonNull ScrollView scrollView,
      @NonNull Button trackEvents) {
    this.rootView = rootView;
    this.adLayout = adLayout;
    this.adManagerAdView = adManagerAdView;
    this.btnAppVersion = btnAppVersion;
    this.btnBeginDebugFile = btnBeginDebugFile;
    this.btnDeleteDebugFile = btnDeleteDebugFile;
    this.btnNewsHub = btnNewsHub;
    this.btnPermissionFIle = btnPermissionFIle;
    this.btnSendDebugFile = btnSendDebugFile;
    this.layoutLinear = layoutLinear;
    this.scrollView = scrollView;
    this.trackEvents = trackEvents;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TestingNativeAdsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TestingNativeAdsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.testing_native_ads, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TestingNativeAdsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adLayout;
      LinearLayout adLayout = ViewBindings.findChildViewById(rootView, id);
      if (adLayout == null) {
        break missingId;
      }

      id = R.id.adManagerAdView;
      AdManagerAdView adManagerAdView = ViewBindings.findChildViewById(rootView, id);
      if (adManagerAdView == null) {
        break missingId;
      }

      id = R.id.btn_appVersion;
      TextView btnAppVersion = ViewBindings.findChildViewById(rootView, id);
      if (btnAppVersion == null) {
        break missingId;
      }

      id = R.id.btn_beginDebugFile;
      Button btnBeginDebugFile = ViewBindings.findChildViewById(rootView, id);
      if (btnBeginDebugFile == null) {
        break missingId;
      }

      id = R.id.btn_deleteDebugFile;
      Button btnDeleteDebugFile = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteDebugFile == null) {
        break missingId;
      }

      id = R.id.btn_news_hub;
      Button btnNewsHub = ViewBindings.findChildViewById(rootView, id);
      if (btnNewsHub == null) {
        break missingId;
      }

      id = R.id.btn_permissionFIle;
      Button btnPermissionFIle = ViewBindings.findChildViewById(rootView, id);
      if (btnPermissionFIle == null) {
        break missingId;
      }

      id = R.id.btn_sendDebugFile;
      Button btnSendDebugFile = ViewBindings.findChildViewById(rootView, id);
      if (btnSendDebugFile == null) {
        break missingId;
      }

      id = R.id.layoutLinear;
      LinearLayout layoutLinear = ViewBindings.findChildViewById(rootView, id);
      if (layoutLinear == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.trackEvents;
      Button trackEvents = ViewBindings.findChildViewById(rootView, id);
      if (trackEvents == null) {
        break missingId;
      }

      return new TestingNativeAdsBinding((CoordinatorLayout) rootView, adLayout, adManagerAdView,
          btnAppVersion, btnBeginDebugFile, btnDeleteDebugFile, btnNewsHub, btnPermissionFIle,
          btnSendDebugFile, layoutLinear, scrollView, trackEvents);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
